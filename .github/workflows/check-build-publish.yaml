name: Check, build and publish

on:
  push:
    branches:
      - main

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checks:
    name: Test and lint
    runs-on: ubuntu-22.04
    permissions:
      checks: write
    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config protobuf-compiler libprotobuf-dev

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with: # seems to ignore rust-toolchain but it should be supported
          toolchain: "1.76.0"
          components: rustfmt, clippy

      - name: Check code formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check
      
      - name: Clippy linting
        uses: giraffate/clippy-action@v1
        with:
          reporter: "github-pr-review"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Dependencies security audit 
        uses: actions-rust-lang/audit@v1
        with:
          ignore: RUSTSEC-2023-0071 # patch not available att

      - name: Run tests
        run: |
          cp example.env .env
          cargo install cargo-make
          cargo make db-up
          cargo make full-test

  publish:
    name: Publish to ghcr.io
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config protobuf-compiler libprotobuf-dev

    - name: Setup rust toolchain
      uses: actions-rs/toolchain@v1
      with: # seems to ignore rust-toolchain but it should be supported
        toolchain: "1.76.0"

    - name: Build release binary
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release

    - name: Log in to gchr.io
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for image labels and tags
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=semver,pattern={{version}}
          type=sha,format=short

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: ./docker/ratings/Dockerfile
